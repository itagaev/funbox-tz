{"version":3,"sources":["card.js","mocks/catfoods.js","App.js","index.js"],"names":["Card","catFood","onBuyClicked","id","taste","content","weight","description","choosed","available","getCardClass","block","className","onClick","portionCnt","mouseCnt","addInfo","style","color","mockCatFoods","App","React","useState","catFoods","setCatFoods","newCatFoods","map","key","render","document","getElementById"],"mappings":"uMAIaA,G,MAAO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAE5BC,EAOEF,EAPFE,GACAC,EAMEH,EANFG,MACAC,EAKEJ,EALFI,QACAC,EAIEL,EAJFK,OACAC,EAGEN,EAHFM,YACAC,EAEEP,EAFFO,QACAC,EACER,EADFQ,UAGIC,EAAe,SAACC,GACpB,OAAKF,EACED,EAAUG,EAAQ,WAAaA,EAAQ,aADvBA,EAAQ,kBAsBjC,OACE,6BACE,yBAAKC,UAAWF,EAAa,QAASG,QAAS,kBAAMX,EAAaC,KAChE,yBAAKS,UAAU,QACb,uBAAGA,UAAU,YAAb,gJACA,wBAAIA,UAAU,cAAd,8CACA,wBAAIA,UAAU,mBAAd,UAAmCR,GACnC,uBAAGQ,UAAU,eACVP,EAAQS,WADX,wCAC8B,IACN,IAArBT,EAAQU,SACL,2BACAV,EAAQU,UAAY,GAAKV,EAAQU,UAAY,EAA7C,UACGV,EAAQU,SADX,uCAEGV,EAAQU,SAFX,mCAE6B,IANnC,qDAOaV,EAAQW,QAAUX,EAAQW,QAAU,KAGnD,yBAAKJ,UAAWF,EAAa,WAC3B,4BACGJ,EACD,6BAFF,kBAOJ,yBAAKM,UAAU,UA1CZH,GAKc,IAAZD,EACL,iKAC6B,IAC3B,0BAAMI,UAAU,WAAWC,QAAS,kBAAMX,EAAaC,KAAvD,8BAKFI,EAXE,uBAAGU,MAAO,CAAEC,MAAO,YAAnB,4DAA6Cd,EAA7C,sECvBKe,EAAe,CAC1B,CACEhB,GAAI,EACJC,MAAO,wCACPC,QAAS,CACPS,WAAY,GACZC,SAAU,GAEZT,OAAQ,GACRC,YAAa,4LACbC,SAAS,EACTC,WAAW,GAEb,CACEN,GAAI,EACJC,MAAO,iCACPC,QAAS,CACPS,WAAY,GACZC,SAAU,GAEZT,OAAQ,EACRC,YAAa,oPACbC,SAAS,EACTC,WAAW,GAEb,CACEN,GAAI,EACJC,MAAO,iCACPC,QAAS,CACPS,WAAY,IACZC,SAAU,EACVC,QAAS,+FAEXV,OAAQ,EACRC,YAAa,8LACbC,SAAS,EACTC,WAAW,ICJAW,G,MAzBH,WAAO,IAAD,EACgBC,IAAMC,SAASH,GAD/B,mBACTI,EADS,KACCC,EADD,KAGVtB,EAAe,SAACC,GACpB,IAAMsB,EAAW,YAAOF,GACxBE,EAAYtB,GAAIK,SAAWiB,EAAYtB,GAAIK,QAC3CgB,EAAYC,IAGd,OACE,yBAAKb,UAAU,aACb,wBAAIA,UAAU,UAAd,sIACA,yBAAKA,UAAU,SACZW,EAASG,KAAI,SAACzB,GAAD,OACZ,kBAAC,EAAD,CACE0B,IAAK1B,EAAQE,GACbF,QAASA,EACTC,aAAcA,WCpB1B0B,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.912386c7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./css/card.css\";\r\n\r\nexport const Card = ({ catFood, onBuyClicked }) => {\r\n  const {\r\n    id,\r\n    taste,\r\n    content,\r\n    weight,\r\n    description,\r\n    choosed,\r\n    available,\r\n  } = catFood;\r\n\r\n  const getCardClass = (block) => {\r\n    if (!available) return block + \" not-available\";\r\n    return choosed ? block + \" choosed\" : block + \" available\";\r\n  };\r\n\r\n  const renderFooterText = () => {\r\n    if (!available)\r\n      return (\r\n        <p style={{ color: \"#FFFF66\" }}>Печалька, с {taste} закончился.</p>\r\n      );\r\n\r\n    return choosed === false ? (\r\n      <p>\r\n        Чего сидишь? Порадуй котэ,{\" \"}\r\n        <span className=\"buy-text\" onClick={() => onBuyClicked(id)}>\r\n          купи.\r\n        </span>\r\n      </p>\r\n    ) : (\r\n      description\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={getCardClass(\"card\")} onClick={() => onBuyClicked(id)}>\r\n        <div className=\"info\">\r\n          <p className=\"subtitle\">Сказачное заморское яство</p>\r\n          <h2 className=\"title bold\">Нямушка</h2>\r\n          <h3 className=\"ingredient bold\">с {taste}</h3>\r\n          <p className=\"description\">\r\n            {content.portionCnt} порций{\" \"}\r\n            {content.mouseCnt === 1\r\n              ? \"мышь\"\r\n              : content.mouseCnt >= 2 && content.mouseCnt <= 4\r\n              ? `${content.mouseCnt} мыши`\r\n              : `${content.mouseCnt} мышей`}{\" \"}\r\n            в подарок {content.addInfo ? content.addInfo : \"\"}\r\n          </p>\r\n        </div>\r\n        <div className={getCardClass(\"weight\")}>\r\n          <h2>\r\n            {weight}\r\n            <br />\r\n            кг\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">{renderFooterText()}</div>\r\n    </div>\r\n  );\r\n};\r\n","export const mockCatFoods = [\r\n  {\r\n    id: 0,\r\n    taste: \"фуа-гра\",\r\n    content: {\r\n      portionCnt: 10,\r\n      mouseCnt: 1,\r\n    },\r\n    weight: 0.5,\r\n    description: \"Печень утки разварная с артишоками.\",\r\n    choosed: false,\r\n    available: true,\r\n  },\r\n  {\r\n    id: 1,\r\n    taste: \"рыбой\",\r\n    content: {\r\n      portionCnt: 40,\r\n      mouseCnt: 2,\r\n    },\r\n    weight: 2,\r\n    description: \"Головы щучьи с чесноком да свежайшая сёмгушка.\",\r\n    choosed: false,\r\n    available: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    taste: \"курой\",\r\n    content: {\r\n      portionCnt: 100,\r\n      mouseCnt: 5,\r\n      addInfo: \"заказчик доволен\",\r\n    },\r\n    weight: 5,\r\n    description: \"Филе из цыплят с трюфелями в бульоне.\",\r\n    choosed: false,\r\n    available: false,\r\n  },\r\n];\r\n","import React from \"react\";\n\nimport { Card } from \"./card\";\nimport { mockCatFoods } from \"./mocks/catfoods\";\n\nimport \"./css/App.css\";\n\nconst App = () => {\n  const [catFoods, setCatFoods] = React.useState(mockCatFoods);\n\n  const onBuyClicked = (id) => {\n    const newCatFoods = [...catFoods];\n    newCatFoods[id].choosed = !newCatFoods[id].choosed;\n    setCatFoods(newCatFoods);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"header\">Ты сегодня покормил кота?</h1>\n      <div className=\"cards\">\n        {catFoods.map((catFood) => (\n          <Card\n            key={catFood.id}\n            catFood={catFood}\n            onBuyClicked={onBuyClicked}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}